name: build

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Lint Code
        run: |
          go get golang.org/x/lint/golint
          go get honnef.co/go/tools/cmd/staticcheck
          make lint

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.15.x", "1.16.x"]
        include:
          - go: 1.16.x
            latest: true

    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Load cached dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: make && ls -alvh
      # Create release
      - name: Generate release tag
        id: tag
        run: |
          echo "::set-output name=release_tag::ActionBuild_$(date +"%Y.%m.%d_%H-%M-%S")"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          # body_path: checksum.txt
          append_body: true
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: |
            ./0dayex-checker-*
      # Done release
  test:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Load cached dependencies
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Download dependencies
        run: go mod download

      - name: Test
        run: make test

      - name: Make coverage
        run: make cover

      - name: Upload coverage to codecov.io
        uses: codecov/codecov-action@v1
